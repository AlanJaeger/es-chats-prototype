# Generated by Django 4.2.5 on 2023-09-19 19:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import refacturedb.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(help_text='User email', max_length=254, unique=True, verbose_name='email')),
                ('photo_url', models.TextField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('language', models.CharField(blank=True, max_length=5, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', refacturedb.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('external_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='External ID')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='first name')),
                ('email', models.EmailField(blank=True, help_text='Contact email', max_length=254, null=True, verbose_name='email')),
                ('status', models.CharField(blank=True, max_length=30, verbose_name='status')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone')),
                ('custom_fields', models.JSONField(blank=True, null=True, verbose_name='custom fields')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('config', models.JSONField(blank=True, null=True, verbose_name='config')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('flows_authorization', models.CharField(blank=True, max_length=50, null=True, verbose_name='Flows Authorization Token')),
                ('date_format', models.CharField(choices=[('D', 'DD-MM-YYYY'), ('M', 'MM-DD-YYYY')], default='D', help_text='Whether day comes first or month comes first in dates', max_length=1, verbose_name='Date Format')),
                ('is_template', models.BooleanField(default=False, verbose_name='is template?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted?')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='config')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='Name')),
                ('default_message', models.TextField(blank=True, null=True, verbose_name='Default queue message')),
            ],
            options={
                'verbose_name': 'Sector Queue',
                'verbose_name_plural': 'Sector Queues',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('config', models.JSONField(blank=True, null=True, verbose_name='config')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('rooms_limit', models.PositiveIntegerField(verbose_name='Rooms limit per employee')),
                ('work_start', models.TimeField(verbose_name='work start')),
                ('work_end', models.TimeField(verbose_name='work end')),
                ('can_trigger_flows', models.BooleanField(default=False, help_text='Is it possible to trigger flows(weni flows integration) from this sector?', verbose_name='Can trigger flows?')),
                ('sign_messages', models.BooleanField(default=False, verbose_name='Sign messages?')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted?')),
                ('open_offline', models.BooleanField(default=True, verbose_name='Open room when all agents are offline?')),
                ('can_edit_custom_fields', models.BooleanField(default=False, verbose_name='Can edit custom fields?')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='refacturedb.project', verbose_name='Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('custom_fields', models.JSONField(blank=True, null=True, verbose_name='custom fields')),
                ('urn', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='urn')),
                ('callback_url', models.TextField(blank=True, null=True, verbose_name='Callback URL')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Ended at')),
                ('ended_by', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ended by')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('is_waiting', models.BooleanField(default=False, verbose_name='is waiting for answer?')),
                ('transfer_history', models.JSONField(blank=True, null=True, verbose_name='Transfer History')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='refacturedb.contact', verbose_name='contact')),
                ('queue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='refacturedb.queue', verbose_name='Queue')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.AUTH_USER_MODEL, to_field='email', verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='queue',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='refacturedb.sector', verbose_name='sector'),
        ),
        migrations.AddConstraint(
            model_name='queue',
            constraint=models.UniqueConstraint(fields=('sector', 'name'), name='unique_queue_name'),
        ),
    ]
